# vim: ft=sh

# Let's just always be UTF-8
LANG=en_US.UTF-8
LC_ALL=en_US.UTF-8

# Fix High Sierra Fork problem exhibited by ansible 2.10
export OBJC_DISABLE_INITIALIZE_FORK_SAFETY=YES

# initialize language environments
which rbenv >/dev/null 2>&1 && eval "$(rbenv init - --no-rehash)"

if which pyenv >/dev/null 2>&1
then
  export PYENV_ROOT="${HOME}/.pyenv"
  eval "$(pyenv init --path)"
  eval "$(pyenv init - --no-rehash "${SHELL}")"
fi

test -d "${HOME}/.nvm" && source "${HOME}/.nvm/nvm.sh"

case "$(basename "${SHELL}")" in
  bash) source "${HOME}"/.bashrc ;;
  *ksh*) export ENV="${HOME}/.kshrc" ;;
esac

if [ -d "${HOME}/.shell-init" ]
then
  for si in "${HOME}"/.shell-init/*.sh
  do
    # shellcheck source=/dev/null
    . "${si}"
  done
fi

GOPATH="${HOME}/Source/go"

add_to_path "/Applications/Postgres.app/Contents/Versions/latest/bin"
add_to_path "${GOPATH}/bin"
add_to_path "${HOME}/bin"
add_to_path "/usr/local/sbin"

if [ -d "${HOME}/Applications/instantclient_19_8" ]
then
  export ORACLE_HOME="${HOME}/Applications/instantclient_19_8"
  [ -n "${DYLD_LIBRARY_PATH}" ] && DYLD_LIBRARY_PATH="${DYLD_LIBRARY_PATH}:${ORACLE_HOME}"
  [ -z "${DYLD_LIBRARY_PATH}" ] && DYLD_LIBRARY_PATH="${ORACLE_HOME}"
  export DYLD_LIBRARY_PATH
  add_to_path "${ORACLE_HOME}"
  TNS_ADMIN="${ORACLE_HOME}/network/admin"
  export TNS_ADMIN
fi

add_to_path "${HOME}/Applications/sqlcl/bin"

add_to_path "${HOME}/.cargo/bin"
add_to_path "${HOME}/.iterm2"

CLICOLOR="y"
EDITOR="vimr -s --wait"
#EDITOR="ec"
VISUAL="$EDITOR"
FCEDITOR="$EDITOR"
PAGER="/usr/bin/less"
LESS="-R -F"
HISTCONTROL="ignorespace:erasedups"
HISTFILESIZE=512
HISTSIZE=1024
HISTIGNORE="history:history *:hist:hist *"
export CLICOLOR EDITOR VISUAL FCEDITOR
export PAGER PATH
export LANG LC_ALL LESS GOPATH 

if [ -e "${HOME}/.dircolors" ]
then
  dircolors=dircolors
  if [ -e /usr/local/bin/gdircolors ]
  then
    dircolors=/usr/local/bin/gdircolors
  fi
  eval "$(${dircolors} "${HOME}"/.dircolors)"
fi

if [ -e "${HOME}/.gpg-agent-info" ]
then
    . "${HOME}/.gpg-agent-info"
    export GPG_AGENT_INFO
fi

# Show all the updates when doing brew update
HOMEBREW_UPDATE_REPORT_ALL_FORMULAE=y
# Get rid of deprecation warning for brew desc
HOMEBREW_EVAL_ALL=y
HOMEBREW_CASK_OPTS='--no-quarantine'
export HOMEBREW_UPDATE_REPORT_ALL_FORMULAE HOMEBREW_EVAL_ALL HOMEBREW_CASK_OPTS

JAVA_HOME=$(/usr/libexec/java_home)
export JAVA_HOME

PRIVATE_ASDF_INSTALL_DIR="$HOME/Library/Lisp/"
export PRIVATE_ASDF_INSTALL_DIR

HOSTNAME="$(uname -n)"

eval "$(direnv hook "$(basename "${SHELL}")")"

test -n "${ITERM_PROFILE}" -a -e "${HOME}/.iterm2_shell_integration.bash" && \
  source "${HOME}/.iterm2_shell_integration.bash"

if [ -e /usr/local/Caskroom/google-cloud-sdk/latest/google-cloud-sdk/path.bash.inc ]
then
  source /usr/local/Caskroom/google-cloud-sdk/latest/google-cloud-sdk/path.bash.inc
  source /usr/local/Caskroom/google-cloud-sdk/latest/google-cloud-sdk/completion.bash.inc
fi

export TZ_LIST='US/Eastern;US/Mountain;US/Pacific;UTC'

cleanup_functions
