function pyvenv_activate {
  for virtdir in ./venv ./.venv .
  do
    if [ -e "${virtdir}/bin/activate" ]
    then
      echo "Activating local virtualenv"
      # shellcheck disable=SC1090
      . "${virtdir}/bin/activate"
      return
    fi
  done
  if [ -z "$1" ]
  then
    cd ~/.virtualenvs || return
    echo "Available Virtual Environments:"
    oPS3="$PS3"
    PS3="Select a Virtual Environment: "
    select VENV in Cancel *
    do
      if [ -z "$VENV" ]
      then
        cd - >/dev/null 2>&1
        return
      elif [ "$VENV" = "Cancel" ]
      then
        cd - >/dev/null 2>&1
        return
      else
         break
      fi
    done
    PS3="$oPS3"
    cd - >/dev/null 2>&1 || return
  else
    VENV="$1"
  fi
  if [ ! -e "${HOME}/.virtualenvs/${VENV}/bin/activate" ]
  then
    echo "No virtual environment named ${VENV} found." >&2
    return 1
  fi
  # shellcheck disable=SC1090
  . "${HOME}/.virtualenvs/${VENV}/bin/activate"
}
alias va='pyvenv_activate'

function add_to_path {
  if ! echo "$PATH" | tr ':' '\n' | grep -x -q "$1"
  then
    PATH="$1:$PATH"
  fi
}

function cleanup_functions {
  unset -f add_to_path
  unset -f cleanup_functions
}

function set-badge {
  printf "\e]1337;SetBadgeFormat=%s\a" "$(echo -n "$1" | base64)"
}

function cmcd {
  if [ -z "$1" ]
  then
    cd {{ .chezmoi.sourceDir }}
  else
    cd "{{ .chezmoi.sourceDir }}/$1"
  fi
}

function cmls {
  if [ -z "$1" ]
  then
    ls -l {{ .chezmoi.sourceDir }}
  else
    ls -l "{{ .chezmoi.sourceDir }}/$1"
  fi
}
